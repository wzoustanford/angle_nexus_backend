from illumenti_crypto_search import IllumentiCryptoSearch 

path_prefix = '../backend/data/'
iSearch = IllumentiCryptoSearch() 
#iSearch.load_dataset(path_prefix + 'crypto_info_table.csv')
iSearch.load_dataset(path_prefix + 'crypto_info_table_full.csv')
iSearch.build_index() 
#res = iSearch.query('Show me cryptocurrencies ranked by market cap')
#res = iSearch.query('bitcoin')
#res = iSearch.query('cloud computing coins')
#res = iSearch.query('NFT tokens')
#res = iSearch.query('DAO coins')
#res = iSearch.query('decentralized exchange coins')
#res = iSearch.query('show me Ethereum coins')
#res = iSearch.query('show me Ethereum cryptocurrencies')
#res = iSearch.query('show me tokens only')
#res = iSearch.query('show me cryptocurrencies with price larger than 10000')
#res = iSearch.query('show me cryptocurrencies with active markets') # not working
#res = iSearch.query('cloud computing coins')
#res = iSearch.query('cloud computing coins with low price')
#res = iSearch.query('cloud computing coins with high price')
#res = iSearch.query('cloud computing coins with low market cap')
#res = iSearch.query('cloud computing coins with high market cap')
#res = iSearch.query('BTC')
#res = iSearch.query('show me cryptocurrencies with debt ratio lower than 0.5')
#res = iSearch.query('BTC')
#res = iSearch.query('ethereum coins with low buy percentage')
#res = iSearch.query('ethereum coins with high buy percentage')
#res = iSearch.query('ethereum coins with low sell percentage')
#res = iSearch.query('ethereum coins with high sell percentage')
#res = iSearch.query('ethereum coins with sell percentage lower than 0.4')
#res = iSearch.query('ethereum coins with market cap above 10 million')
#res = iSearch.query('ethereum coins with market cap below 10 million')
res = iSearch.query('ethereum coins with high transaction frequency')
#res = iSearch.query('ethereum coins with transaction frequency higher than 600')
#res = iSearch.query('show me coins with high market cap')
#res = iSearch.query('ethereum coins with high market cap and buy percentage above 0.5')

print ('-' * 80)
print(res)
print ('-' * 80)
print(len(res.keys()))
